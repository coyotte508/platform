sudo: false

language: go

go:
  - 1.11.4

go_import_path: github.com/tidepool-org/platform

dist: trusty

env:
  global:
    - BUILD_OPENAPI_DOC=true

before_install:
  - sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5;
  - echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.6 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-3.6.list;
  - sudo apt-get update
  - sudo apt-get install --allow-unauthenticated --allow-downgrades -y mongodb-org=3.6.12 mongodb-org-server=3.6.12 mongodb-org-shell=3.6.12 mongodb-org-mongos=3.6.12 mongodb-org-tools=3.6.12;
  - sudo service mongod start;
  # - npm install -g snyk

addons:
  code_climate:
    repo_token: 91ded9b66924acbe830541ab3593daf535f05f7c6db91b5cbd2d26dcf37da0b8

deploy:
  # Control deployment by setting a value for `on`. Setting the `branch`
  # option to `master` means Travis will only attempt a deployment on
  # builds of your repo's master branch (e.g., after you merge a PR).
  - provider: s3
    on:
      tags: true
  #    branch: dblp
    # You can refer to environment variables from Travis repo settings!
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    region: $AWS_DEFAULT_REGION
    # Name of the S3 bucket to which your site should be uploaded.
    bucket: $AWS_BUCKET
    # Prevent Travis from deleting your built site so it can be uploaded.
    skip_cleanup: true
    # Path of the source directory containing your built site.
    local_dir: deploy
    # Path to a directory containing your built site.
    upload-dir: deploy
    # Set the Cache-Control header.
    cache_control: "max-age=21600"
    # Deploy SOUP list
  - provider: s3
    on:
      tags: true
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    region: $AWS_DEFAULT_REGION
    bucket: com.diabeloop.yourloops.doc
    skip_cleanup: true
    local_dir: soup
    upload-dir: soup
    cache_control: "max-age=21600"

services:
  - docker

script:
  # - make ci-generate ci-build ci-test ci-snyk ci-deploy ci-docker
  - make ci-generate ci-build ci-test ci-deploy ci-soups ci-docker
cache:
  directories:
    - $HOME/.cache/go-build
